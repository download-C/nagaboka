<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

<!-- 접근 권한 처리 담당 핸들러 -->
<bean id="customAccessDenied" class="com.nagaboka.security.CustomAccessDeniedHandler"  />
<!-- 로그인 성공 후 처리 담당 핸들러 -->
<bean id="customLoginSuccess" class="com.nagaboka.security.CustomLoginSuccessHandler"  />
<!-- 비번 암호화해주는 객체 -->
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

<security:http auto-config="true" use-expressions="true" >
	<security:intercept-url pattern="/sample/all" access="permitAll" />
	<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
	<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')" />
	<security:intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')" />
	<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" />
	<security:logout logout-url="/customLogout" invalidate-session="true" />
	<security:access-denied-handler ref="customAccessDenied"/>
</security:http>


<security:authentication-manager>
	<security:authentication-provider>
		<security:jdbc-user-service 
			data-source-ref="dataSource"
			users-by-username-query="select u_id, u_pw, u_enabled 
									from nagaboka.user where u_id = ?" 
			authorities-by-username-query="select u_id, auth 
											from nagaboka.user_auth where u_id = ?"  />
		<security:password-encoder ref="bcryptPasswordEncoder" />
	</security:authentication-provider>
</security:authentication-manager>


</beans>

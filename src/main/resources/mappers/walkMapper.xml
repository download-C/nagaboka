<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nagaboka.mapper.WalkMapper">

	<!-- 산책 장소 resultMap -->
	<resultMap type="WalkVO" id="walk">
		<result property="wno" column="wno" />
		<result property="wname" column="wname" />
		<result property="wlat" column="wlat" />
		<result property="wlng" column="wlng" />
	</resultMap>
	
	<!-- 산책 장소 댓글 resultMap -->
	
	<resultMap type="WalkReviewVO" id="wron">
		<result property="wrno" column="wrno"/>
		<result property="wrregdate" column="wrregdate"/>
		<result property="wrcon" column="wrcon"/>
		<result property="wrimgs" column="wrimgs"/>
		<result property="wrlike" column="wrlike"/>
		<collection property="walk" resultMap="wak" />
		<collection property="user" resultMap="user" />
	</resultMap>
	
	<!-- 회원 resultMap -->
	<resultMap type="UserVO" id="user">
		<result property="u_id" column="u_id" />
		<result property="u_pw" column="u_pw" />
		<result property="u_name" column="u_name" />
		<result property="u_regdate" column="u_regdate" />
		<result property="u_latitude" column="u_latitude" />
		<result property="u_longitude" column="u_longitude" />
		<result property="u_road_full_Addr" column="u_road_full_addr" />
	</resultMap>
	
	<!-- 산책 장소 최초 입력 -->
	<!-- 테스트 완료 -->
	<insert id="insertWalk">
	  insert into walk(w_name, w_lat, w_lng)
	  values (#{w_name}, #{w_lat}, #{w_lng}) 
	</insert>
	
	<!-- 산책 장소 개수  | 반경 설정 어떻게 할지 생각해보고 where절 잘 구해야함 -->	
	<!-- 1위도는 133.33km 차이 -->
	<select id="getWalkCnt" resultType="Integer">
		select count(w_no) from walk
	</select>
	
	<!-- 산책 장소 댓글 입력 -->
	<!-- 테스트 완료 -->
	<insert id="writeWalkReview">
	  insert into walk_review(w_no, u_id, wr_con, wr_imgs, wr_like)
	  values (#{walk.w_no}, #{u_id}, #{wr_con}, ifnull(#{wr_imgs},''), #{wr_like})
	</insert>
	
	<!-- 해당 장소의 like가 1(좋아요)인 댓글의 개수  -->
	<update id="updateWRCnt">
		update from walk
		set wr_count=(count w_no
					 from walk_review
					 where w_name=#{w_name} and wr_like=1)
	    where w_name=#{w_name}
	</update>
	
	<!-- 산책 장소 이름으로 목록 정보(장소명, 댓글 수, 발바닥 수) 불러오기 -->
	<!-- 테스트 완료 -->
	<select id="getWalkList" resultType="WalkVO">
		select w.w_no, w.w_name, w_lat, w_lng, count(c.wr_no) as wr_count, 
			   sum(c.wr_like) as w_likecount
		from walk w join walk_review c
		on w.w_no = c.w_no 
	
	</select>
	
	<!-- 특정 산책 장소 정보 이름으로 불러오기 -->
	<select id="getWalk" resultType="WalkVO">
		select * from walk
		where w_name=#{w_name}
	</select>
	
	<!-- 특정 산책 장소 댓글 목록 불러오기 -->
	<select id="getReviewList" resultType="WalkReviewVO">
		select * from walk_review
		order by wr_no desc
		limit #{startRow}, #{pageSize}
	</select>
	
	<!-- 산책 장소 댓글 수정 -->
	<update id="updateWalkReview">
	</update>
	
	<!-- 산책 장소 댓글 삭제 -->
	<delete id="deleteWalkReview">
	</delete>
</mapper>